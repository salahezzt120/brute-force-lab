-- DDL for security lab demo (run in Supabase SQL editor)

-- 1) Insecure table: stores plaintext passwords
create table if not exists public.users_insecure (
  id bigint generated by default as identity primary key,
  email text not null unique,
  password_plaintext text not null,
  created_at timestamptz default now()
);

-- 2) MD5 table: stores MD5 hash of passwords
create table if not exists public.users_md5 (
  id bigint generated by default as identity primary key,
  email text not null unique,
  password_md5 text not null,
  created_at timestamptz default now()
);

-- Helpful indexes
create index if not exists users_insecure_email_idx on public.users_insecure (email);
create index if not exists users_md5_email_idx on public.users_md5 (email);

-- Enable RLS and add permissive policies for demo (anon can read/insert/update/delete)
alter table public.users_insecure enable row level security;
alter table public.users_md5 enable row level security;

drop policy if exists "allow all users_insecure" on public.users_insecure;
create policy "allow all users_insecure" on public.users_insecure
  for all using (true) with check (true);

drop policy if exists "allow all users_md5" on public.users_md5;
create policy "allow all users_md5" on public.users_md5
  for all using (true) with check (true);

-- Optional sample users
-- insert into public.users_insecure (email, password_plaintext) values ('alice@example.com', 'password123');
-- insert into public.users_md5 (email, password_md5) values ('bob@example.com', md5('password123'));

